#!/usr/bin/env python3
import sys

MOD = 200  # type: int
YES = "Yes"  # type: str
NO = "No"  # type: str


def solve(N: int, A: "List[int]"):
    n = min(N, 8)
    b = {}

    for i in range(2**n):
        select = []
        ms = 0
        for j in range(n):
            if ((i >> j) & 1):
                ms += A[j]
                ms %= MOD
                select.append(j+1)

        if b.get(ms):
            print(YES)
            print("{x} {f}".format(x=len(b[ms]), f=' '.join(map(str, b[ms]))))
            print("{y} {f}".format(y=len(select), f=' '.join(map(str, select))))
            return
        else:
            b[ms] = select

    print(NO)
    return


# Generated by 2.2.0 https://github.com/kyuridenamida/atcoder-tools  (tips: You use the default template now. You can remove this line by using your custom template)
def main():
    def iterate_tokens():
        for line in sys.stdin:
            for word in line.split():
                yield word
    tokens = iterate_tokens()
    N = int(next(tokens))  # type: int
    A = [int(next(tokens)) for _ in range(N)]  # type: "List[int]"
    solve(N, A)


if __name__ == '__main__':
    main()
