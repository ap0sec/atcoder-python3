#!/usr/bin/env python3

def solve(Q):

    v = {}
    v_min = 1 + 10**9
    v_max = 0
    
    for q in Q:
        if q[0] == 1:
            if q[1] not in v:
                v[q[1]] = 1
            else:
                v[q[1]] = v[q[1]] + 1

            if q[1] < v_min:
                v_min = q[1]
            if q[1] > v_max:
                v_max = q[1]
                
        elif q[0] == 2:
            if not v.get(q[1]):
                pass
            elif v[q[1]] <= q[2]:
                v.pop(q[1])

                if len(v):
                    if q[1] == v_min:
                        k = v.keys()
                        v_min = min(k)
                
                    if q[1] == v_max:
                        k = v.keys()
                        v_max = max(k)
                else:
                    v_min = 1 + 10**9
                    v_max = 0
                
            else:
                v[q[1]] = v[q[1]] - q[2]
        else:
            print(v_max-v_min)

# Generated by 2.5.0 https://github.com/kyuridenamida/atcoder-tools  (tips: You use the default template now. You can remove this line by using your custom template)
def main():
    N = int(input())
    Q = [list(map(int, input().split())) for l in range(N)]

    solve(Q)

if __name__ == '__main__':
    main()
