#!/usr/bin/env python3
import sys


def solve(H: int, W: int, S: "List[str]"):

    v = []

    for i, s in enumerate(S):
        idx = -1
        result = []
        for cnt in range(s.count("o")):
            idx = s.index("o", idx+1)
            result.append(idx)

        for o in result:
            v.append([i,o])

    print(abs(v[0][0] - v[1][0]) + abs(v[0][1] - v[1][1]))
    return


# Generated by 2.5.0 https://github.com/kyuridenamida/atcoder-tools  (tips: You use the default template now. You can remove this line by using your custom template)
def main():
    def iterate_tokens():
        for line in sys.stdin:
            for word in line.split():
                yield word
    tokens = iterate_tokens()
    H = int(next(tokens))  # type: int
    W = int(next(tokens))  # type: int
    S = [next(tokens) for _ in range(H)]  # type: "List[str]"
    solve(H, W, S)

if __name__ == '__main__':
    main()
