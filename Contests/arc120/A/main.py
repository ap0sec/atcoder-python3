#!/usr/bin/env python3
import sys


def solve(N: int, A: "List[int]"):

    max_o = 0
    sum_a = 0
    f_a = 0
    for i in range(N):

        n = i+1
        max_n = max(max_o, A[i])

        f_a += max_n*n + sum_a + A[i] - max_o*(n-1)

        max_o = max_n
        sum_a += A[i]

        print(f_a)

    return


# Generated by 2.3.1 https://github.com/kyuridenamida/atcoder-tools  (tips: You use the default template now. You can remove this line by using your custom template)
def main():
    def iterate_tokens():
        for line in sys.stdin:
            for word in line.split():
                yield word
    tokens = iterate_tokens()
    N = int(next(tokens))  # type: int
    A = [int(next(tokens)) for _ in range(N)]  # type: "List[int]"
    solve(N, A)


if __name__ == '__main__':
    main()
