#!/usr/bin/env python3
import sys


def solve(N: int, A: "List[int]", B: "List[int]"):

    max_A = 1
    min_B = 1000

    for n in range(N):
        if max_A < A[n]:
            max_A = A[n]
        if min_B > B[n]:
            min_B = B[n]

    if max_A >= min_B + 1:
        print(0)
    else:
        print(min_B - max_A + 1)

    return


# Generated by 2.3.1 https://github.com/kyuridenamida/atcoder-tools  (tips: You use the default template now. You can remove this line by using your custom template)
def main():
    def iterate_tokens():
        for line in sys.stdin:
            for word in line.split():
                yield word
    tokens = iterate_tokens()
    N = int(next(tokens))  # type: int
    A = [int(next(tokens)) for _ in range(N)]  # type: "List[int]"
    B = [int(next(tokens)) for _ in range(N)]  # type: "List[int]"
    solve(N, A, B)


if __name__ == '__main__':
    main()
